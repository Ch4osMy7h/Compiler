		词法分析结果		
       int   keyword         3
         c identifer         1
         ;  delimter        12
       int   keyword         3
       gcd identifer         2
         (  delimter         6
       int   keyword         3
         u identifer         3
         ,  delimter         4
       int   keyword         3
         v identifer         4
         )  delimter         7
         {  delimter        10
        if   keyword        20
         (  delimter         6
         v identifer         5
        ==  delimter        18
         0       int         1
         )  delimter         7
    return   keyword        32
         u identifer         6
         ;  delimter        12
      else   keyword        21
    return   keyword        32
       gcd identifer         7
         (  delimter         6
         v identifer         8
         ,  delimter         4
         u identifer         9
         -  delimter         2
         (  delimter         6
         u identifer        10
         /  delimter        38
         v identifer        11
         )  delimter         7
         *  delimter        36
         v identifer        12
         )  delimter         7
         ;  delimter        12
         }  delimter        11
    double   keyword         6
       add identifer        13
         (  delimter         6
       int   keyword         3
         x identifer        14
         ,  delimter         4
       int   keyword         3
         y identifer        15
         )  delimter         7
         {  delimter        10
       int   keyword         3
         z identifer        16
         ;  delimter        12
         z identifer        17
         =  delimter        19
         x identifer        18
         +  delimter         1
         y identifer        19
         ;  delimter        12
    return   keyword        32
         z identifer        20
         ;  delimter        12
         }  delimter        11
       int   keyword         3
         a identifer        21
         ;  delimter        12
       int   keyword         3
      main identifer        22
         (  delimter         6
         )  delimter         7
         {  delimter        10
    double   keyword         6
         b identifer        23
         ;  delimter        12
       int   keyword         3
         a identifer        24
         ;  delimter        12
      char   keyword         7
         d identifer        25
         ;  delimter        12
       int   keyword         3
         x identifer        26
         ;  delimter        12
       int   keyword         3
         y identifer        27
         ;  delimter        12
       int   keyword         3
         t identifer        28
         ;  delimter        12
       int   keyword         3
         s identifer        29
         [  delimter         8
        10       int         2
         ]  delimter         9
         ;  delimter        12
         a identifer        30
         =  delimter        19
         b identifer        31
         =  delimter        19
         4       int         3
         ;  delimter        12
         x identifer        32
         =  delimter        19
         5       int         4
         ;  delimter        12
         y identifer        33
         =  delimter        19
        10       int         5
         ;  delimter        12
         t identifer        34
         =  delimter        19
         5       int         6
         ;  delimter        12
         d identifer        35
         =  delimter        19
       'a'      char         1
         ;  delimter        12
       gcd identifer        36
         (  delimter         6
         a identifer        37
         ,  delimter         4
         b identifer        38
         )  delimter         7
         ;  delimter        12
       add identifer        39
         (  delimter         6
         x identifer        40
         ,  delimter         4
         y identifer        41
         )  delimter         7
         ;  delimter        12
        if   keyword        20
         (  delimter         6
         a identifer        42
         >  delimter         0
         b identifer        43
         )  delimter         7
         a identifer        44
         =  delimter        19
         b identifer        45
         +  delimter         1
         1       int         7
         *  delimter        36
         a identifer        46
         ;  delimter        12
      else   keyword        21
         b identifer        47
         =  delimter        19
         a identifer        48
         +  delimter         1
         1       int         8
         ;  delimter        12
     while   keyword        26
         (  delimter         6
         x identifer        49
         <  delimter        17
        10       int         9
         )  delimter         7
         {  delimter        10
         x identifer        50
         =  delimter        19
         x identifer        51
         +  delimter         1
         1       int        10
         ;  delimter        12
         s identifer        52
         [  delimter         8
         2       int        11
         ]  delimter         9
         =  delimter        19
         s identifer        53
         [  delimter         8
         3       int        12
         ]  delimter         9
         +  delimter         1
         1       int        13
         ;  delimter        12
         }  delimter        11
    return   keyword        32
         0       int        14
         ;  delimter        12
         }  delimter        11
  vardef       c     int      --
  fundef     gcd     int       2
 paradef     int       u      __
 paradef     int       v      __
      if      __      __      __
      ==       v       0      t0
 ifbegin      t0      __      __
  return       u      __      __
    else      __      __      __
 funcall     gcd      __      __
       /       u       v      t1
       *      t1       v      t2
       -       u      t2      t3
 paramin       v      __      __
 paramin      t3      __      __
 callend      __      __      __
  return              __      __
   ifend      __      __      __
  funend      __      __      __
  fundef     add  double       2
 paradef     int       x      __
 paradef     int       y      __
  vardef       z     int      --
       +       x       y      t4
       =      t4      __       z
  return       z      __      __
  funend      __      __      __
  vardef       a     int      --
  fundef    main     int       0
  vardef       b  double      --
  vardef       a     int      --
  vardef       d    char      --
  vardef       x     int      --
  vardef       y     int      --
  vardef       t     int      --
  vardef       s     arr      __
       =       4      __       b
       =       b      __       a
       =       5      __       x
       =      10      __       y
       =       5      __       t
       =     'a'      __       d
 funcall     gcd      __      __
 paramin       a      __      __
 paramin       b      __      __
 callend      __      __      __
 funcall     add      __      __
 paramin       x      __      __
 paramin       y      __      __
 callend      __      __      __
      if      __      __      __
       >       a       b      t5
 ifbegin      t5      __      __
       *       1       a      t6
       +       b      t6      t7
       =      t7      __       a
    else      __      __      __
       +       a       1      t8
       =      t8      __       b
   ifend      __      __      __
   while      __      __      __
       <       x      10      t9
      do      t9      __      __
       +       x       1     t10
       =     t10      __       x
       +    s[3]       1     t11
       =     t11      __    s[2]
whileend      __      __      __
  return       0      __      __
  funend      __      __      __
